{"ast":null,"code":"import _objectSpread from \"/home/medow/ReactWorkSpace/coming-soon-preview/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/medow/ReactWorkSpace/coming-soon-preview/src/containers/Home/Home.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport errorHandler from '../../hoc/ErrorHandler/ErrorHandler';\nimport TextAndSquare from '../../components/TextAndSquare/TextAndSquare';\nimport Countdown from '../../components/Countdown/Countdown';\nimport { isFulfilled } from 'q';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      countdown: {\n        days: 1,\n        hours: 0,\n        minutes: 0,\n        seconds: 5\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      let time = _objectSpread({}, this.state.countdown);\n\n      time.seconds = time.seconds != 0 ? time.seconds - 1 : 0;\n\n      if (time.seconds == 0 && (time.minutes != 0 || time.hours != 0 || time.days != 0)) {\n        time.seconds = 60;\n        time.minutes = time.minutes - 1;\n\n        if (time.minutes == 0 && time.hours != 0 && time.days != 0) {\n          time.minutes = 59;\n          time.hours = time.hours - 1;\n\n          if (time.hours == -1 && time.days != 0) {\n            time.hours = 23;\n            time.days = time.days - 1;\n          }\n        }\n      }\n\n      this.setState({\n        countdown: time\n      });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(TextAndSquare, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(Countdown, {\n      days: this.state.countdown.days,\n      hours: this.state.countdown.hours,\n      minutes: this.state.countdown.minutes,\n      seconds: this.state.countdown.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default errorHandler(Home);","map":{"version":3,"sources":["/home/medow/ReactWorkSpace/coming-soon-preview/src/containers/Home/Home.js"],"names":["React","Component","Aux","errorHandler","TextAndSquare","Countdown","isFulfilled","Home","state","countdown","days","hours","minutes","seconds","componentDidMount","interval","setInterval","time","setState","componentWillUnmount","clearInterval","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;AACA,OAAOC,SAAP,MAAsB,sCAAtB;AACA,SAASC,WAAT,QAA4B,GAA5B;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAKzBO,KALyB,GAKjB;AACJC,MAAAA,SAAS,EAAE;AACPC,QAAAA,IAAI,EAAE,CADC;AAEPC,QAAAA,KAAK,EAAE,CAFA;AAGPC,QAAAA,OAAO,EAAE,CAHF;AAIPC,QAAAA,OAAO,EAAE;AAJF;AADP,KALiB;AAAA;;AAczBC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKC,QAAL,GAAgBC,WAAW,CAAC,MAAM;AAE9B,UAAIC,IAAI,qBACD,KAAKT,KAAL,CAAWC,SADV,CAAR;;AAIAQ,MAAAA,IAAI,CAACJ,OAAL,GAAeI,IAAI,CAACJ,OAAL,IAAgB,CAAhB,GAAoBI,IAAI,CAACJ,OAAL,GAAe,CAAnC,GAAuC,CAAtD;;AACA,UAAKI,IAAI,CAACJ,OAAL,IAAgB,CAAhB,KAAsBI,IAAI,CAACL,OAAL,IAAgB,CAAhB,IAAqBK,IAAI,CAACN,KAAL,IAAc,CAAnC,IAAwCM,IAAI,CAACP,IAAL,IAAa,CAA3E,CAAL,EAAoF;AAChFO,QAAAA,IAAI,CAACJ,OAAL,GAAe,EAAf;AACAI,QAAAA,IAAI,CAACL,OAAL,GAAeK,IAAI,CAACL,OAAL,GAAe,CAA9B;;AACA,YAAGK,IAAI,CAACL,OAAL,IAAgB,CAAhB,IAAqBK,IAAI,CAACN,KAAL,IAAc,CAAnC,IAAwCM,IAAI,CAACP,IAAL,IAAa,CAAxD,EACA;AACIO,UAAAA,IAAI,CAACL,OAAL,GAAe,EAAf;AACAK,UAAAA,IAAI,CAACN,KAAL,GAAaM,IAAI,CAACN,KAAL,GAAa,CAA1B;;AACA,cAAGM,IAAI,CAACN,KAAL,IAAc,CAAC,CAAf,IAAoBM,IAAI,CAACP,IAAL,IAAa,CAApC,EAAsC;AAClCO,YAAAA,IAAI,CAACN,KAAL,GAAa,EAAb;AAEAM,YAAAA,IAAI,CAACP,IAAL,GAAYO,IAAI,CAACP,IAAL,GAAY,CAAxB;AACH;AACJ;AACJ;;AAED,WAAKQ,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAEQ;AAAZ,OAAd;AACH,KAvB0B,EAuBxB,IAvBwB,CAA3B;AAwBD;;AACDE,EAAAA,oBAAoB,GAAG;AACrBC,IAAAA,aAAa,CAAC,KAAKL,QAAN,CAAb;AACD;;AAEHM,EAAAA,MAAM,GAAI;AACN,WACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,SAAD;AACQ,MAAA,IAAI,EAAI,KAAKb,KAAL,CAAWC,SAAX,CAAqBC,IADrC;AAEQ,MAAA,KAAK,EAAI,KAAKF,KAAL,CAAWC,SAAX,CAAqBE,KAFtC;AAGQ,MAAA,OAAO,EAAI,KAAKH,KAAL,CAAWC,SAAX,CAAqBG,OAHxC;AAIQ,MAAA,OAAO,EAAI,KAAKJ,KAAL,CAAWC,SAAX,CAAqBI,OAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAUH;;AAxDwB;;AA2D7B,eAAeV,YAAY,CAAEI,IAAF,CAA3B","sourcesContent":["import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Aux/Aux';\nimport errorHandler from '../../hoc/ErrorHandler/ErrorHandler';\nimport TextAndSquare from '../../components/TextAndSquare/TextAndSquare';\nimport Countdown from '../../components/Countdown/Countdown';\nimport { isFulfilled } from 'q';\n\nclass Home extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        countdown: {\n            days: 1,\n            hours: 0,\n            minutes: 0,\n            seconds: 5 \n        }      \n    }\n\n    componentDidMount() {\n\n        this.interval = setInterval(() => {\n\n            let time = {\n                ...this.state.countdown\n            };\n\n            time.seconds = time.seconds != 0 ? time.seconds - 1 : 0;\n            if ( time.seconds == 0 && (time.minutes != 0 || time.hours != 0 || time.days != 0)) {\n                time.seconds = 60;\n                time.minutes = time.minutes - 1;\n                if(time.minutes == 0 && time.hours != 0 && time.days != 0)\n                {\n                    time.minutes = 59;\n                    time.hours = time.hours - 1;\n                    if(time.hours == -1 && time.days != 0){\n                        time.hours = 23;\n\n                        time.days = time.days - 1;\n                    }\n                }\n            }\n\n            this.setState({countdown: time })\n        }, 1000);\n      }\n      componentWillUnmount() {\n        clearInterval(this.interval);\n      }\n\n    render () {\n        return (\n            <Aux>\n                <TextAndSquare />\n                <Countdown \n                        days = {this.state.countdown.days}\n                        hours = {this.state.countdown.hours}\n                        minutes = {this.state.countdown.minutes}\n                        seconds = {this.state.countdown.seconds}/>\n            </Aux>\n        );\n    }\n}\n\nexport default errorHandler( Home );"]},"metadata":{},"sourceType":"module"}