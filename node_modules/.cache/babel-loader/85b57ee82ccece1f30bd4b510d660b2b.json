{"ast":null,"code":"var _jsxFileName = \"/home/medow/ReactWorkSpace/coming-soon-preview/src/containers/Toolbar/Toolbar.js\";\nimport React, { Component } from 'react';\nimport classes from './Toolbar.module.css';\nimport NavigationItems from '../../components/Navigation/NavigationItems';\nimport DrawerToggle from '../../components/Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n\nclass Toolbar extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false,\n      navigationLinks: [{\n        destination: \"/aboutUs\",\n        linkText: \"About Us\"\n      }, {\n        destination: \"contactUs\",\n        linkText: \"Get in Touch\"\n      }]\n    };\n\n    this.sideDrawerClosedHandler = () => {\n      this.setState({\n        showSideDrawer: false\n      });\n    };\n\n    this.sideDrawerToggleHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n\n    this.updateToolBar = destination => {\n      let updatedLinks = [...this.state.navigationLinks];\n\n      if (destination == '/') {\n        updatedLinks = [{\n          destination: \"/aboutUs\",\n          linkText: \"About Us\"\n        }, {\n          destination: \"contactUs\",\n          linkText: \"Get in Touch\"\n        }];\n      }\n\n      if (destination == \"/aboutUs\") {\n        updatedLinks = [{\n          destination: \"/\",\n          linkText: \"Home\"\n        }, {\n          destination: \"/contactUs\",\n          linkText: \"Get in Touch\"\n        }];\n      }\n\n      if (destination == \"/contactUs\") {\n        updatedLinks = [{\n          destination: \"/aboutUs\",\n          linkText: \"About Us\"\n        }, {\n          destination: \"/\",\n          linkText: \"Home\"\n        }];\n      }\n\n      this.setState({\n        navigationLinks: updatedLinks\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateToolBar(this.props.pathName);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pathName != prevProps.pathName) this.updateToolBar(this.props.pathName);\n  }\n\n  render() {\n    return React.createElement(\"header\", {\n      className: classes.Toolbar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(DrawerToggle, {\n      clicked: this.sideDrawerToggleHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(\"nav\", {\n      className: classes.DesktopOnly,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(NavigationItems, {\n      navigationLinks: this.state.navigationLinks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Toolbar;","map":{"version":3,"sources":["/home/medow/ReactWorkSpace/coming-soon-preview/src/containers/Toolbar/Toolbar.js"],"names":["React","Component","classes","NavigationItems","DrawerToggle","Toolbar","state","showSideDrawer","navigationLinks","destination","linkText","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","updateToolBar","updatedLinks","componentDidMount","props","pathName","componentDidUpdate","prevProps","render","DesktopOnly"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\nimport classes from './Toolbar.module.css';\n\nimport NavigationItems from '../../components/Navigation/NavigationItems';\n\nimport DrawerToggle from '../../components/Navigation/SideDrawer/DrawerToggle/DrawerToggle';\n\nclass Toolbar extends Component \n    {  \n\n        state = { \n            showSideDrawer: false,\n            navigationLinks:[\n                {\n                    destination:\"/aboutUs\",\n                    linkText: \"About Us\"\n                },\n                {\n                    destination:\"contactUs\",\n                    linkText:\"Get in Touch\"\n                }\n            ]\n        }\n\n        componentDidMount(){\n            this.updateToolBar(this.props.pathName);\n        }\n        componentDidUpdate(prevProps) {\n            if(this.props.pathName != prevProps.pathName)\n                this.updateToolBar(this.props.pathName);\n        }\n\n        sideDrawerClosedHandler = () => {\n            this.setState( { showSideDrawer: false } );\n        }\n    \n        sideDrawerToggleHandler = () => {\n            this.setState( ( prevState ) => {\n                return { showSideDrawer: !prevState.showSideDrawer };\n            } );\n        }\n\n        updateToolBar = (destination) => {\n            let updatedLinks = [...this.state.navigationLinks];\n            if(destination == '/'){\n                updatedLinks = [\n                    {\n                        destination:\"/aboutUs\",\n                        linkText: \"About Us\"\n                    },\n                    {\n                        destination:\"contactUs\",\n                        linkText:\"Get in Touch\"\n                    }\n                ] \n            }\n            if(destination == \"/aboutUs\")\n            {\n                updatedLinks = [\n                    {\n                        destination:\"/\",\n                        linkText:\"Home\"\n                    },\n                    {\n                        destination:\"/contactUs\",\n                        linkText:\"Get in Touch\"\n                    }\n                ]\n            }\n            if(destination == \"/contactUs\")\n            {\n                updatedLinks = [\n                    {\n                        destination:\"/aboutUs\",\n                        linkText:\"About Us\"\n                    },\n                    {\n                        destination:\"/\",\n                        linkText:\"Home\"\n                    }\n                ]\n            }\n            this.setState({navigationLinks: updatedLinks })\n        }\n\n        render(){\n            return (      \n                <header className = {classes.Toolbar}>\n                    <DrawerToggle clicked ={this.sideDrawerToggleHandler}/>\n                    <nav className = {classes.DesktopOnly}>\n                            <NavigationItems navigationLinks = {this.state.navigationLinks}/>\n                    </nav>\n                </header> \n            );\n        }   \n    }\n\nexport default Toolbar;"]},"metadata":{},"sourceType":"module"}