{"ast":null,"code":"var _jsxFileName = \"/home/medow/ReactWorkSpace/coming-soon-preview/src/hoc/Layout/Layout.js\";\nimport React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css';\nimport backgroundImage from '../../assets/images/background.jpg';\nimport Toolbar from '../../containers/Toolbar/Toolbar';\n\nclass Layout extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showSideDrawer: false,\n      navigationLinks: [{\n        destination: \"/aboutUs\",\n        linkText: \"About Us\"\n      }, {\n        destination: \"contactUs\",\n        linkText: \"Get in Touch\"\n      }]\n    };\n\n    this.sideDrawerClosedHandler = () => {\n      console.log(\"fds\");\n      this.setState({\n        showSideDrawer: false\n      });\n    };\n\n    this.sideDrawerToggleHandler = () => {\n      this.setState(prevState => {\n        return {\n          showSideDrawer: !prevState.showSideDrawer\n        };\n      });\n    };\n\n    this.updateToolBar = destination => {\n      let updatedLinks = [...this.state.navigationLinks];\n\n      if (destination == '/') {\n        updatedLinks = [{\n          destination: \"/aboutUs\",\n          linkText: \"About Us\"\n        }, {\n          destination: \"contactUs\",\n          linkText: \"Get in Touch\"\n        }];\n      }\n\n      if (destination == \"/aboutUs\") {\n        updatedLinks = [{\n          destination: \"/\",\n          linkText: \"Home\"\n        }, {\n          destination: \"/contactUs\",\n          linkText: \"Get in Touch\"\n        }];\n      }\n\n      if (destination == \"/contactUs\") {\n        updatedLinks = [{\n          destination: \"/aboutUs\",\n          linkText: \"About Us\"\n        }, {\n          destination: \"/\",\n          linkText: \"Home\"\n        }];\n      }\n\n      this.setState({\n        navigationLinks: updatedLinks\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.updateToolBar(this.props.pathName);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.pathName != prevProps.pathName) this.updateToolBar(this.props.pathName);\n  }\n\n  render() {\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Toolbar, {\n      pathName: this.props.pathName,\n      links: this.state.navigationLinks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(SideDrawer, {\n      open: this.state.showSideDrawer,\n      closed: this.sideDrawerClosedHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"img\", {\n      className: classes.BackgroundImage,\n      src: backgroundImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), this.props.children);\n  }\n\n}\n\n;\nexport default Layout;","map":{"version":3,"sources":["/home/medow/ReactWorkSpace/coming-soon-preview/src/hoc/Layout/Layout.js"],"names":["React","Component","Aux","classes","backgroundImage","Toolbar","Layout","state","showSideDrawer","navigationLinks","destination","linkText","sideDrawerClosedHandler","console","log","setState","sideDrawerToggleHandler","prevState","updateToolBar","updatedLinks","componentDidMount","props","pathName","componentDidUpdate","prevProps","render","BackgroundImage","children"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../Aux/Aux';\n\nimport classes from './Layout.module.css';\n\nimport backgroundImage from '../../assets/images/background.jpg';\n\nimport Toolbar from '../../containers/Toolbar/Toolbar';\n\nclass Layout extends Component {\n\n    state = { \n        showSideDrawer: false,\n        navigationLinks:[\n            {\n                destination:\"/aboutUs\",\n                linkText: \"About Us\"\n            },\n            {\n                destination:\"contactUs\",\n                linkText:\"Get in Touch\"\n            }\n        ]\n    }\n\n    sideDrawerClosedHandler = () => {\n        console.log(\"fds\");\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    componentDidMount(){\n        this.updateToolBar(this.props.pathName);\n    }\n    componentDidUpdate(prevProps) {\n        if(this.props.pathName != prevProps.pathName)\n            this.updateToolBar(this.props.pathName);\n    }\n\n    updateToolBar = (destination) => {\n        let updatedLinks = [...this.state.navigationLinks];\n        if(destination == '/'){\n            updatedLinks = [\n                {\n                    destination:\"/aboutUs\",\n                    linkText: \"About Us\"\n                },\n                {\n                    destination:\"contactUs\",\n                    linkText:\"Get in Touch\"\n                }\n            ] \n        }\n        if(destination == \"/aboutUs\")\n        {\n            updatedLinks = [\n                {\n                    destination:\"/\",\n                    linkText:\"Home\"\n                },\n                {\n                    destination:\"/contactUs\",\n                    linkText:\"Get in Touch\"\n                }\n            ]\n        }\n        if(destination == \"/contactUs\")\n        {\n            updatedLinks = [\n                {\n                    destination:\"/aboutUs\",\n                    linkText:\"About Us\"\n                },\n                {\n                    destination:\"/\",\n                    linkText:\"Home\"\n                }\n            ]\n        }\n        this.setState({navigationLinks: updatedLinks })\n    }\n\n    render(){\n        return(\n            <Aux>\n                <Toolbar pathName = {this.props.pathName} links = {this.state.navigationLinks}/>\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <img className={classes.BackgroundImage} src={backgroundImage}/>\n                {this.props.children}\n            </Aux>\n        );\n    }\n   \n};\n\nexport default Layout;"]},"metadata":{},"sourceType":"module"}