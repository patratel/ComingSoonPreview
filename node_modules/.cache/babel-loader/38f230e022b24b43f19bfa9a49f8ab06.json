{"ast":null,"code":"var _jsxFileName = \"/home/medow/ReactWorkSpace/coming-soon-preview/src/components/ViewCards/ViewCards.js\";\nimport React from 'react';\nimport ViewCard from './ViewCard/ViewCard';\nimport vector from '../../assets/icons/viewCards/vector.png';\nimport printer from '../../assets/icons/viewCards/printer.png';\nimport monitor from '../../assets/icons/viewCards/monitor.png';\nimport cogwheel from '../../assets/icons/viewCards/cogwheel-outline.png';\n\nconst viewCards = props => {\n  const viewCards = [{\n    logo: vector,\n    title: \"Graphic Design\",\n    body: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\"\n  }, {\n    logo: printer,\n    title: \"Print Design\",\n    body: \"When an unknown printer took a galley of type and scrambled itto make a type specimen book. It has survived not only five centuries\"\n  }, {\n    logo: monitor,\n    title: \"Motion Design\",\n    body: \"But also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum.\"\n  }, {\n    logo: cogwheel,\n    title: \"Strategy & Media\",\n    body: \"and more recently with desktop publishing software like Ladus PageMaker including versions of Lorem Ipsum. It is is not simply a random text\"\n  }];\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => {\n    return [...Array(props.ingredients[igKey])].map((_, i) => {\n      return React.createElement(BurgerIngredient, {\n        key: igKey + i,\n        type: igKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    });\n  }).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length == 0) {\n    transformedIngredients = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Please start adding ingredients!\");\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  });\n};\n\nexport default viewCards;","map":{"version":3,"sources":["/home/medow/ReactWorkSpace/coming-soon-preview/src/components/ViewCards/ViewCards.js"],"names":["React","ViewCard","vector","printer","monitor","cogwheel","viewCards","props","logo","title","body","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,OAAP,MAAoB,0CAApB;AACA,OAAOC,QAAP,MAAqB,mDAArB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAEzB,QAAMD,SAAS,GAAG,CACd;AACIE,IAAAA,IAAI,EAAEN,MADV;AAEIO,IAAAA,KAAK,EAAE,gBAFX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GADc,EAMd;AACIF,IAAAA,IAAI,EAAEL,OADV;AAEIM,IAAAA,KAAK,EAAC,cAFV;AAGIC,IAAAA,IAAI,EAAE;AAHV,GANc,EAWd;AACIF,IAAAA,IAAI,EAAEJ,OADV;AAEIK,IAAAA,KAAK,EAAE,eAFX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAXc,EAgBd;AACIF,IAAAA,IAAI,EAAEH,QADV;AAEII,IAAAA,KAAK,EAAE,kBAFX;AAGIC,IAAAA,IAAI,EAAE;AAHV,GAhBc,CAAlB;AAuBA,MAAIC,sBAAsB,GAAGC,MAAM,CAACC,IAAP,CAAYN,KAAK,CAACO,WAAlB,EACxBC,GADwB,CACpBC,KAAK,IAAI;AACV,WAAO,CAAC,GAAGC,KAAK,CAACV,KAAK,CAACO,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CAAyC,CAACG,CAAD,EAAIC,CAAJ,KAAU;AACtD,aAAO,oBAAC,gBAAD;AAAkB,QAAA,GAAG,EAAIH,KAAK,GAAGG,CAAjC;AAAoC,QAAA,IAAI,EAAEH,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFM,CAAP;AAGH,GALwB,EAMxBI,MANwB,CAMjB,CAACC,GAAD,EAAMC,EAAN,KAAa;AACjB,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GARwB,EAQtB,EARsB,CAA7B;;AASI,MAAGX,sBAAsB,CAACa,MAAvB,IAAiC,CAApC,EAAsC;AAClCb,IAAAA,sBAAsB,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAAzB;AACH;;AACL,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAQH,CA7CD;;AA+CA,eAAeL,SAAf","sourcesContent":["import React from 'react';\n\nimport ViewCard from './ViewCard/ViewCard';\nimport vector from '../../assets/icons/viewCards/vector.png';\nimport printer from '../../assets/icons/viewCards/printer.png';\nimport monitor from '../../assets/icons/viewCards/monitor.png';\nimport cogwheel from '../../assets/icons/viewCards/cogwheel-outline.png';\n\nconst viewCards = (props) => {\n\n    const viewCards = [\n        {\n            logo: vector,\n            title: \"Graphic Design\",\n            body: \"Lorem Ipsum is simply dummy text of the printing and typesetting industry.Lorem Ipsum has been the industry's standard dummy text ever since the 1500s\" \n        },\n        {\n            logo: printer,\n            title:\"Print Design\",\n            body: \"When an unknown printer took a galley of type and scrambled itto make a type specimen book. It has survived not only five centuries\"\n        },\n        {\n            logo: monitor,\n            title: \"Motion Design\",\n            body: \"But also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum.\"\n        },\n        {\n            logo: cogwheel,\n            title: \"Strategy & Media\",\n            body: \"and more recently with desktop publishing software like Ladus PageMaker including versions of Lorem Ipsum. It is is not simply a random text\"\n        }\n    ]\n\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key = {igKey + i} type={igKey} />\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n        if(transformedIngredients.length == 0){\n            transformedIngredients = <p>Please start adding ingredients!</p>\n        }\n    return(\n\n        <div>\n            \n        </div>\n\n    );\n\n}\n\nexport default viewCards;"]},"metadata":{},"sourceType":"module"}